install.packages(c("ggplot2", "scales"))
getwd()
setwd('/home/arity/Downloads/robust-graph/experiments/robustness_comparison/')
ls()
ls
data = read.csv('result.csv')
data
data
data[,:50]
data[,1:51]
data[:,1:51]
data[1:51]
data[1:51,]
data[1:50,]
data[1:50,]
library(c('ggplot2', 'scales'))
data = read.csv('result.csv')[1:50,]
ggplot(data, aes(x=q, y=S)) +
geom_line(aes(colour=data$type, group=data$type), size=1.5, alpha=0.5) +
xlab('j') + ylab('AGoS') +
scale_x_continuous(breaks=pretty_breaks(10)) +
scale_y_continuous(breaks=pretty_breaks(10)) +
guides(colour=guide_legend(override.aes = list(alpha = 1))) +
labs(colour='Network type', shape='Network type')
gp
library('ggplot2', 'scales')
data = read.csv('result.csv')[1:50,]
ggplot(data, aes(x=q, y=S)) +
geom_line(aes(colour=data$type, group=data$type), size=1.5, alpha=0.5) +
xlab('j') + ylab('AGoS') +
scale_x_continuous(breaks=pretty_breaks(10)) +
scale_y_continuous(breaks=pretty_breaks(10)) +
guides(colour=guide_legend(override.aes = list(alpha = 1))) +
labs(colour='Network type', shape='Network type')
library('ggplot2')
library('scales')
data = read.csv('result.csv')[1:50,]
ggplot(data, aes(x=q, y=S)) +
geom_line(aes(colour=data$type, group=data$type), size=1.5, alpha=0.5) +
xlab('j') + ylab('AGoS') +
scale_x_continuous(breaks=pretty_breaks(10)) +
scale_y_continuous(breaks=pretty_breaks(10)) +
guides(colour=guide_legend(override.aes = list(alpha = 1))) +
labs(colour='Network type', shape='Network type')
library(ggplot2, scales)
data = read.csv('result.csv')[1:50,]
ggplot(data, aes(x=q, y=S)) +
geom_line(aes(colour=data$type, group=data$type), size=1.5, alpha=0.5) +
xlab('j') + ylab('AGoS') +
scale_x_continuous(breaks=pretty_breaks(10)) +
scale_y_continuous(breaks=pretty_breaks(10)) +
guides(colour=guide_legend(override.aes = list(alpha = 1))) +
labs(colour='Network type', shape='Network type')
library(ggplot2)
library(scales)
data = read.csv('result.csv')[1:50,]
ggplot(data, aes(x=q, y=S)) +
geom_line(aes(colour=data$type, group=data$type), size=1.5, alpha=0.5) +
xlab('j') + ylab('AGoS') +
scale_x_continuous(breaks=pretty_breaks(10)) +
scale_y_continuous(breaks=pretty_breaks(10)) +
guides(colour=guide_legend(override.aes = list(alpha = 1))) +
labs(colour='Network type', shape='Network type')
install.packages("ggplot2")
install.packages(ggplot2, dep=T)
install.packages('ggplot2', dep=T)
install.packages('ggplot2', dep=T)
library(ggplot2)
data = read.csv('result.csv')[1:50,]
ggplot(data, aes(x=q, y=S))
data
summary(data)
library(ggplot2)
data = read.csv('result.csv')[1:50,]
ggplot(data, aes(x=q, y=original))
ggplot(data, aes(x=q, y=data))
ggplot(data, aes(x=q, y=original))
ggplot(data, aes(x=q, y=original)) + geom_line()
colnames(data)
ycol = colnames(data)[2:]
tail
tail(colnames(data))
tail(colnames(data), n=1)
tail(colnames(data), n=-1)
help(apply)
help(lambda)
function(x)
x+1
aaa = function(x) x+1
aaa(1)
help(append)
help(apply)
data[q]
data[q,]
data['q']
help(lapply)
data['q']
tmp = sapply(ycol, function(x) data[x])
xcol = head(colnames(data), n=1)
ycol = tail(colnames(data), n=-1)
tmp = sapply(ycol, function(x) data[x])
tmp
type(tmp)
help(type)
typeof(tmp)
help(sapply)
tmp = sapply(ycol, function(x) sapply(data[x], function(y) c(x, y)))
tmp
View(tmp)
tmp = sapply(ycol, function(x) lapply(data[x], function(y) c(x, y)))
View(tmp)
tmp = sapply(ycol, data[x], function(y) c(x, y))
tmp = sapply(ycol, data[x], function(y) c(x, y))
tmp = sapply(ycol, function(x) data[x])
unlist(tmp)
tmp = unlist(sapply(ycol, function(x) data[x]))
View(tmp)
help([[]])
help([[)
help("[")
tmp = unlist(tmp[[]])
data <- melt(data, id.vars = xcol,
measure.vars = ycol)
library(reshape2)
data <- melt(data, id.vars = xcol,
measure.vars = ycol)
data
help(melt)
data <- melt(data, id.vars = xcol, measure.vars = ycol,
value.name='S(q)', na.rm=TRUE)
data = read.csv('result.csv')[1:50,]
xcol = head(colnames(data), n=1)
ycol = tail(colnames(data), n=-1)
data <- melt(data, id.vars = xcol, measure.vars = ycol,
value.name='S(q)', na.rm=TRUE)
ggplot(data, aes(x=q, y=original)) + geom_line()
data = read.csv('result.csv')[1:50,]
xcol = head(colnames(data), n=1)
ycol = tail(colnames(data), n=-1)
data <- melt(data, id.vars = xcol, measure.vars = ycol,
value.name='S', na.rm=TRUE)
ggplot(data, aes(x=q, y=S)) + geom_line()
ggplot(data, aes(x=q, y=S)) + geom_line(aes(group=S))
ggplot(data, aes(y=q, x=S, colour=as.factor(S))) +
geom_line(aes(group=S))
ggplot(data, aes(x=q, y=S, colour=as.factor(S))) +
geom_line(aes(group=S))
as.factor(S)
ggplot(data, aes(x=q, y=S, colour=as.factor(ycol))) +
geom_line(aes(group=S))
ggplot(data, aes(x=q, y=S, colour=as.factor(q))) +
geom_line(aes(group=S))
ggplot(data, aes(x=q, y=S)) +
geom_line(aes(group=S))
data
head(data)
help(melt)
data <- melt(data, id.vars = xcol, measure.vars = ycol,
value.name='S', variable.name='opt type', na.rm=TRUE)
data = read.csv('result.csv')[1:50,]
xcol = head(colnames(data), n=1)
ycol = tail(colnames(data), n=-1)
data <- melt(data, id.vars = xcol, measure.vars = ycol,
value.name='S', variable.name='opt type', na.rm=TRUE)
head(dta)
head(data)
ggplot(data, aes(x=q, y=S, colour=as.factor(opt_type))) +
geom_line(aes(group=opt_type))
ggplot(data, aes(x=q, y=S, colour=as.factor(opt_type)))
data
head(data)
ggplot(data, aes(x=q, y=S, colour=as.factor(opt.type)))
data = read.csv('result.csv')[1:50,]
xcol = head(colnames(data), n=1)
ycol = tail(colnames(data), n=-1)
data <- melt(data, id.vars = xcol, measure.vars = ycol,
value.name='S', variable.name='opt.type', na.rm=TRUE)
# ggplot
ggplot(data, aes(x=q, y=S, colour=as.factor(opt.type))) +
geom_line(aes(group=opt_type))
ggplot(data, aes(x=q, y=S, colour=as.factor(opt.type))) +
geom_line(aes(group=opt.type))
ggplot(data, aes(x=q, y=S, colour=as.factor(opt.type))) +
geom_line(aes(group=opt.type)) +
scale_fill_discrete(breaks=c('original',
'greedy',
'onion',
'our method, 100 swaps',
'our method, 1000 swaps'))
ggplot(data, aes(x=q, y=S, colour=as.factor(opt.type))) +
geom_line(aes(group=opt.type)) +
scale_colour_discrete(breaks=c('original',
'greedy',
'onion',
'our method, 100 swaps',
'our method, 1000 swaps'))
levels(data)
levels(data$group)
levels(data$group)[levels(data$group)=='original'] <- 'original'
data = read.csv('result.csv')[1:50,]
xcol = head(colnames(data), n=1)
ycol = tail(colnames(data), n=-1)
data <- melt(data, id.vars = xcol, measure.vars = ycol, na.rm=TRUE)
data
ggplot(data, aes(x=q, y=value, colour=as.factor(variable))) +
geom_line(aes(group=opt.type))
data = read.csv('result.csv')[1:50,]
xcol = head(colnames(data), n=1)
ycol = tail(colnames(data), n=-1)
data <- melt(data, id.vars = xcol, measure.vars = ycol, na.rm=TRUE)
# ggplot
ggplot(data, aes(x=q, y=value, colour=as.factor(variable))) +
geom_line(aes(group=variable)) +
a
ggplot(data, aes(x=q, y=value, colour=as.factor(variable))) +
geom_line(aes(group=variable))
# ggplot
ggplot(data, aes(x=q, y=value, colour=as.factor(variable))) +
geom_line(aes(group=variable)) +
xlab('q') + ylab('S') + # setting x and y labels
guide_legend(title='opt type')
ggplot(data, aes(x=q, y=value, colour=as.factor(variable))) +
geom_line(aes(group=variable)) +
xlab('q') + ylab('S') + # setting x and y labels
labs(colour='opt type')
ggplot(data, aes(x=q, y=value, colour=as.factor(variable))) +
geom_line(aes(group=variable)) +
xlab('q') + ylab('S') + # setting x and y labels
labs(colour='opt type') + # setting legend title
scale_colour_discrete(labels=c('original',
'greedy',
'onion',
'our method, 100 swaps',
'our method, 1000 swaps'))
library(reshape2)
library(ggplot2)
# reading and formatting csv for ggplot
data = read.csv('result.csv')[1:50,]
xcol = head(colnames(data), n=1)
ycol = tail(colnames(data), n=-1)
data <- melt(data, id.vars = xcol, measure.vars = ycol, na.rm=TRUE)
# ggplot
ggplot(data, aes(x=q, y=value, colour=as.factor(variable))) +
geom_line(aes(group=variable)) +
xlab('q') + ylab('S') + # setting x and y labels
labs(colour='opt type') + # setting legend title
scale_colour_discrete(labels=c('original',
'greedy',
'onion',
'new.100.swaps',
'new.1000.swaps'),
labels=c('original',
'greedy',
'onion',
'our method, 100 swaps',
'our method, 1000 swaps'))
library(reshape2)
library(ggplot2)
# reading and formatting csv for ggplot
data = read.csv('result.csv')[1:50,]
xcol = head(colnames(data), n=1)
ycol = tail(colnames(data), n=-1)
data <- melt(data, id.vars = xcol, measure.vars = ycol, na.rm=TRUE)
# ggplot
ggplot(data, aes(x=q, y=value, colour=as.factor(variable))) +
geom_line(aes(group=variable)) +
xlab('q') + ylab('S') + # setting x and y labels
labs(colour='opt type') + # setting legend title
scale_colour_discrete(breaks=c('original',
'greedy',
'onion',
'new.100.swaps',
'new.1000.swaps'),
labels=c('original',
'greedy',
'onion',
'our method, 100 swaps',
'our method, 1000 swaps'))
library(reshape2)
library(ggplot2)
# reading and formatting csv for ggplot
data = read.csv('result.csv')[1:50,]
xcol = head(colnames(data), n=1)
ycol = tail(colnames(data), n=-1)
data <- melt(data, id.vars = xcol, measure.vars = ycol, na.rm=TRUE)
# ggplot
ggplot(data, aes(x=q, y=value, colour=as.factor(variable))) +
geom_line(aes(group=variable)) +
xlab('q') + ylab('S') + # setting x and y labels
labs(colour='opt type') + # setting legend title
scale_colour_discrete(breaks=c('original', # setting order of legend
'greedy',
'onion',
'new.100.swaps',
'new.1000.swaps'),
labels=c('original', # setting label of legend
'greedy',
'onion',
'our method, 100 swaps',
'our method, 1000 swaps'))
